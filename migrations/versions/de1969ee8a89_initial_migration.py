"""Initial migration

Revision ID: de1969ee8a89
Revises: 
Create Date: 2022-12-07 22:30:29.827371

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'de1969ee8a89'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('employees', schema=None) as batch_op:
        batch_op.drop_index('ix_employees_company_id')

    op.drop_table('employees')
    op.drop_table('companies')
    with op.batch_alter_table('payments', schema=None) as batch_op:
        batch_op.drop_index('ix_payments_employee_id')

    op.drop_table('payments')
    with op.batch_alter_table('projects_employees', schema=None) as batch_op:
        batch_op.drop_index('ix_projects_employees_employee_id')
        batch_op.drop_index('ix_projects_employees_project_id')

    op.drop_table('projects_employees')
    with op.batch_alter_table('projects', schema=None) as batch_op:
        batch_op.drop_index('ix_projects_company_id')

    op.drop_table('projects')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('projects',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('projects_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('company_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], name='projects_company_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='projects_pkey'),
    postgresql_ignore_search_path=False
    )
    with op.batch_alter_table('projects', schema=None) as batch_op:
        batch_op.create_index('ix_projects_company_id', ['company_id'], unique=False)

    op.create_table('projects_employees',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('employee_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('project_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('date_start', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('date_end', sa.DATE(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], name='projects_employees_employee_id_fkey'),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name='projects_employees_project_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='projects_employees_pkey')
    )
    with op.batch_alter_table('projects_employees', schema=None) as batch_op:
        batch_op.create_index('ix_projects_employees_project_id', ['project_id'], unique=False)
        batch_op.create_index('ix_projects_employees_employee_id', ['employee_id'], unique=False)

    op.create_table('payments',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('employee_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('payment_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('ammount', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('currency', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], name='payments_employee_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='payments_pkey')
    )
    with op.batch_alter_table('payments', schema=None) as batch_op:
        batch_op.create_index('ix_payments_employee_id', ['employee_id'], unique=False)

    op.create_table('companies',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('companies_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('city', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('address', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('phone', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('year_founded', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='companies_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('employees',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('company_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('job', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('phone', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('date_of_birth', sa.DATE(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], name='employees_company_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='employees_pkey')
    )
    with op.batch_alter_table('employees', schema=None) as batch_op:
        batch_op.create_index('ix_employees_company_id', ['company_id'], unique=False)

    # ### end Alembic commands ###
